{"version":3,"sources":["components/MapFrom.js","container/MapContainer.js","components/Header.js","components/Menu.js","modules/yoso.js","lib/createRequestThunk.js","lib/api.js","App.js","modules/mymarker.js","modules/mymap.js","modules/index.js","reportWebVitals.js","index.js"],"names":["MapFromBlock","styled","div","MapFrom","id","MapContainer","info","useEffect","container","document","getElementById","options","center","kakao","maps","LatLng","level","map","Map","zoomControl","ZoomControl","addControl","ControlPosition","RIGHT","event","addListener","bound","getBounds","console","log","toString","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","displayMarker","locPosition","message","marker","Marker","iwContent","InfoWindow","content","removable","open","setCenter","positions","data","color","inventory","title","addr","latlng","lng","i","length","CustomOverlay","setMap","HeaderBlock","Header","MenuBlock","Menu","GET_YOSO","getYoso","type","requet","SUCCESS","FALIURE","params","dispatch","a","resopnse","payload","error","creatRequestThunk","axios","get","process","yoso","handleActions","state","loading","action","App","useDispatch","useSelector","yosoInfo","yosoLoading","yosoError","SET_MYMARKER","mymarker","createAction","SET_MYMAP","mymap","rootReducer","combineReducers","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","logger","createLogger","store","createStore","composeWithDevTools","applyMiddleware","ReduxThunk","ReactDOM","render"],"mappings":"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","file":"static/js/main.60a8013a.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst MapFromBlock = styled.div`\n  position: absolute;\n  margin: 0;\n  top: 50px;\n  width: 100%;\n  height: 100%;\n`;\n\nconst MapFrom = () => {\n  return <MapFromBlock id=\"myMap\"></MapFromBlock>;\n};\n\nexport default MapFrom;\n","/*global kakao*/\nimport React, { useEffect } from \"react\";\nimport MapFrom from \"../components/MapFrom\";\n\nconst MapContainer = ({ info }) => {\n  useEffect(() => {\n    const container = document.getElementById(\"myMap\");\n    const options = {\n      center: new kakao.maps.LatLng(37.335887, 126.584063),\n      level: 7,\n    };\n    const map = new kakao.maps.Map(container, options);\n\n    const zoomControl = new kakao.maps.ZoomControl();\n    map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);\n    kakao.maps.event.addListener(map, \"zoom_changed\", function () {\n      let bound = map.getBounds();\n      console.log(bound, toString());\n    });\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        var lat = position.coords.latitude, // 위도\n          lon = position.coords.longitude; // 경도\n        var locPosition = new kakao.maps.LatLng(lat, lon),\n          message =\n            '<div style=\"padding:3px; border-radius:20px;\">나의 위치</div>';\n\n        displayMarker(locPosition, message);\n      });\n    } else {\n      var locPosition = new kakao.maps.LatLng(33.450701, 126.570667),\n        message = \"geolocation을 사용할수 없어요..\";\n      displayMarker(locPosition, message);\n    }\n    function displayMarker(locPosition, message) {\n      var marker = new kakao.maps.Marker({\n        map: map,\n        position: locPosition,\n      });\n\n      var iwContent = message,\n        iwRemoveable = true;\n      var infowindow = new kakao.maps.InfoWindow({\n        content: iwContent,\n        removable: iwRemoveable,\n      });\n      infowindow.open(map, marker);\n      map.setCenter(locPosition);\n    }\n    const positions = info.data.map((info) => {\n      return {\n        color: info.color,\n        inventory: info.inventory,\n        title: info.addr,\n        latlng: new kakao.maps.LatLng(info.lat, info.lng),\n      };\n    });\n    for (let i = 0; i < positions.length; i++) {\n      var content =\n        `<div style = \"background-color:${positions[i].color}; position:relative; border-radius:7px; border: 1px solid #ccc; border-bottom:2px solid #ddd; float:left;\">` +\n        `   <span style = \"display:block;text-align:center;background:#fff; margin:5px 5px 5px 35px; padding:3px 3px; font-size:14px; font-weight:bold;\">${positions[i].inventory}</span>` +\n        `</div>`;\n      const customOverlay = new kakao.maps.CustomOverlay({\n        content: content,\n        position: positions[i].latlng, // 마커를 표시할 위치\n      });\n      customOverlay.setMap(map);\n    }\n  }, [info]);\n  return <MapFrom />;\n};\n\nexport default MapContainer;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst HeaderBlock = styled.div`\n  background-color: rgba(37, 143, 255);\n  height: 50px;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  h1 {\n    padding-left: 1rem;\n    padding-top: 0.25rem;\n    color: white;\n    margin: 0;\n  }\n`;\n\nconst Header = () => {\n  return (\n    <HeaderBlock>\n      <h1>요소수</h1>\n    </HeaderBlock>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst MenuBlock = styled.div`\n  position: absolute;\n  top: 50px;\n  left: 0;\n  bottom: 0;\n  width: 250px;\n  margin: 10px 0 30px 10px;\n  padding: 5px;\n  overflow-y: auto;\n  background: rgba(255, 255, 255, 0.7);\n  z-index: 1;\n  font-size: 12px;\n  border-radius: 10px;\n`;\n\nconst Menu = () => {\n  return <MenuBlock></MenuBlock>;\n};\n\nexport default Menu;\n","import { handleActions } from \"redux-actions\";\nimport creatRequestThunk from \"../lib/createRequestThunk\";\nimport * as api from \"../lib/api\";\n\nconst GET_YOSO = \"yoso/GET_YOSO\";\nconst GET_YOSO_SUCCESS = \"yoso/GET_YOSO_SUCCESS\";\nconst GET_YOSO_FAILURE = \"yoso/GET_YOSO_FAILURE\";\n\nexport const getYoso = creatRequestThunk(GET_YOSO, api.getInfo);\n\nconst initialState = {\n  info: null,\n  loading: false,\n  error: false,\n};\n\nconst yoso = handleActions(\n  {\n    [GET_YOSO]: (state) => ({\n      ...state,\n      loading: true,\n    }),\n    [GET_YOSO_SUCCESS]: (state, action) => ({\n      ...state,\n      loading: false,\n      info: action.payload,\n    }),\n    [GET_YOSO_FAILURE]: (state, action) => ({\n      ...state,\n      loading: false,\n      error: action.payload,\n    }),\n  },\n  initialState\n);\n\nexport default yoso;\n","export default function creatRequestThunk(type, requet) {\n  const SUCCESS = `${type}_SUCCESS`;\n  const FALIURE = `${type}_FALIURE`;\n  return (params) => async (dispatch) => {\n    dispatch({ type });\n    try {\n      const resopnse = await requet(params);\n      dispatch({\n        type: SUCCESS,\n        payload: resopnse.data,\n      });\n    } catch (e) {\n      dispatch({\n        type: FALIURE,\n        payload: e,\n        error: true,\n      });\n      throw e;\n    }\n  };\n}\n","import axios from \"axios\";\n\nexport const getInfo = () =>\n  axios.get(\n    `/uws/v1/inventory?page=1&perPage=1000&serviceKey=${process.env.REACT_APP_UWS_KEY}`\n  );\n","import \"./App.css\";\nimport MapContainer from \"./container/MapContainer\";\nimport Header from \"./components/Header\";\nimport Menu from \"./components/Menu\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { getYoso } from \"./modules/yoso\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const { yosoInfo, yosoLoading, yosoError } = useSelector((state) => ({\n    yosoInfo: state.yoso.info,\n    yosoLoading: state.yoso.loading,\n    yosoError: state.yoso.error,\n  }));\n  useEffect(() => {\n    dispatch(getYoso());\n  }, [dispatch]);\n  if (yosoLoading) return <div>로딩중...</div>;\n  if (yosoError) return <div>{yosoError}</div>;\n  if (!yosoInfo) return null;\n  return (\n    <>\n      <Header />\n      <MapContainer info={yosoInfo} />\n      <Menu />\n    </>\n  );\n};\n\nexport default App;\n","import { createAction, handleActions } from \"redux-actions\";\n\nconst SET_MYMARKER = \"mymarker/SET_MYMARKER\";\n\nexport const setMymarker = createAction(SET_MYMARKER, ({ marker }) => marker);\n\nconst initialState = {\n  marker: null,\n};\n\nconst mymarker = handleActions(\n  {\n    [SET_MYMARKER]: (state, action) => ({\n      ...state,\n      marker: action.payload,\n    }),\n  },\n  initialState\n);\n\nexport default mymarker;\n","import { createAction, handleActions } from \"redux-actions\";\n\nconst SET_MYMAP = \"mymap/SET_MYMAP\";\n\nexport const setMymap = createAction(SET_MYMAP, ({ map }) => map);\n\nconst initialState = {\n  map: null,\n};\n\nconst mymap = handleActions(\n  {\n    [SET_MYMAP]: (state, action) => ({\n      ...state,\n      map: action.payload,\n    }),\n  },\n  initialState\n);\n\nexport default mymap;\n","import { combineReducers } from \"redux\";\nimport yoso from \"./yoso\";\nimport mymarker from \"./mymarker\";\nimport mymap from \"./mymap\";\n\nconst rootReducer = combineReducers({\n  yoso,\n  mymarker,\n  mymap,\n});\n\nexport default rootReducer;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport rootReducer from \"./modules/index\";\nimport { createLogger } from \"redux-logger\";\nimport ReduxThunk from \"redux-thunk\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst logger = createLogger();\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(logger, ReduxThunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}